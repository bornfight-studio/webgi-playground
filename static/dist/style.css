/*!*********************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/sass-loader/dist/cjs.js!./static/scss/style.scss ***!
  \*********************************************************************************************************************************************/
/**
 * Tools
 */
/**
 * Tools
 */
/**
 * Get breakpoint from breakpoints settings map
 */
/**
 * Media query mixin
 * @param {} $to - Value from $settings-breakpoints
 * available breakpoints can be found in _settings.breakpoints.scss
 * usage for max width:
 * @include mq(md){};
 * usage for min width:
 * @include mq(null, md)
 */
/**
 * Fluid font sizes
 * @param {String} $size - Size
 * usage:
 * @include fontSize("a5");
 */
/**
 * Fluid property values
 * @param {String} $property - Property
 * @param {String} $spacing - Spacing
 * @param {String} $value - Value
 * usage:
 * @include fluidValue("margin-top", "s-56");
 * @include fluidValue("max-width", null, 600px);
 * used In fluidValue mixin and fontSize mixin
 * use mixin instead
 */
/**
 * Fluid font sizes
 * @param {Number} $min-size - Min font size
 * @param {Number} $max-size - Max font size
 * @param {Number} $min-breakpoint - Min breakpoint
 * @param {Number} $max-breakpoint - Max breakpoint
 * @param {String} $unit - Return unit
 * @return {String}
 * used In fluidValue mixin and fontSize mixin
 * use mixin instead
 */
/**
 * Fluid font sizes
 * Used For Sizes > $breakpoint-xxl
 * @param {Number} $min-size - Min font size
 * @param {Number} $max-size - Max font size
 * @param {Number} $min-breakpoint - Min breakpoint
 * @param {Number} $max-breakpoint - Max breakpoint
 * @param {String} $unit - Return unit
 * @return {String}
 */
/**
 * Round number to decimals
 * @param {Number} $number - Number to round
 * @param {Number} $decimals - Number of decimals
 */
/**
 * Get spacing values from settings
 */
/**
 * Fetch nested keys
 * @param {Map} $map - Map
 * @param {Arglist} $keys - Keys to fetch
 * @return {*}
 */
/**
 * Hover support mixin
 * Detect if device supports hover interaction
 * 1. If device is not supporting hover, add properties as active state styles
 * 2. If device is supporting hover, add properties as hover state styles
 * usage:
 * @include hover{}
 */
/**
 * Focus accessibility support mixin
 * Enable box shadow for focusable (tabbable) elements
 * 1. Target only elements that are not disabled and need a visible indicator to show focus
 * usage:
 * @include focus{}
 */
/**
 * Button reset
 * Make button to look like text
 * Useful for any kind of UI based on <button> element
 * usage:
 * @include button-reset;
 */
/**
 * Get transition easing from $settings-transitions-easing
 */
/**
 * Transition function
 * @param {string} $transitionName - Name of the transition from $settings-transitions
 * @param {string} $transitionEasing - get transition easing from $settings-transitions-easing
 * usage:
 * transition: getTransition;
 * transition: getTransition(slide, ease-in-quad);
 */
/**
 * Custom transition function
 * used when you need to specify custom transition for only one or multiple properties but not all
 * if you will not change the property use getTransition instead
 * default easing is from getTransitionEasing
 * @param {string} $transitions - any number of transitions
 * usage:
 * transition: getCustomTransition(opacity);
 * transition: getCustomTransition(transform 0.3s);
 * transition: getCustomTransition(transform 0.5s ease, background-color 0.2s);
 * transition: getCustomTransition(
 *                  top 0.3s cubic-bezier(0.23, 1, 0.32, 1),
 *                  transform 0.3s cubic-bezier(0.23, 1, 0.32, 1) 0.3s
 *               );
 */
/**
 * Unfold transition function
 * Helper for getCustomTransition();
 * Takes any number of arguments passed to getCustomTransition() and makes unfolds them to single properties
 * 1. Transition property defaults
 * 2. Grab transition properties if they exist
 */
/**
 * Font face mixin
 * @param {string} $font-name - Name of the font
 * @param {string} $font-filename - Name of the file without extension
 * @param {number} $version - Font version
 * @param {number} $font-weight - Font weight value
 * @param {string} $font-name - Font style property (if the font is italic)
 * usage:
 * @include font-face("Hanken-Grotesk", "HankenGrotesk-Regular");
 * usage for weight or style other than default
 * @include font-face(
 *  "Hanken-Grotesk",
 *  "HankenGrotesk-SemiBold",
 *  $font-weight: 600,
 *  $font-style: italic
 * );
 */
/**
 * Convert font-size from px to rem
 * 1. Default font size on html element is 100%, equivalent to 16px;
 * @param {number} $size - the value in pixel you want to convert
 * usage:
 * padding-top: rem(20px);
 */
/**
 * Convert font-size from px to em
 * 1. Default font size on html element is 100%, equivalent to 16px;
 * @param {number} $size - the value in pixel you want to convert
 * @param {number} $font-size - font size of element in pixels
 * usage:
 * padding-top: em(20px);
 */
/**
 * Context
 */
/**
 * Viewport width function
 * 1. 1 vw is equal to 1% of the viewport width
 * @param {number} $size - the value in pixel you want to convert
 * usage:
 * padding-top: get-vw(100px);
 */
/**
 * Viewport height function
 * 1. 1 vw is equal to 1% of the viewport width
 * @param {number} $size - the value in pixel you want to convert
 * usage:
 * padding-top: get-vh(100px);
 */
/**
 * Strip units function
 * @param {number} $number - the value you want to strip unuts from
 * usage:
 * strip-units(100px);
 * returns: 100
 */
/**
 * Get z-index from $settings-zindex
 * usage:
 * z-index: getZindex(navigation);
 * z-index: getZindex(navigation, 1);
 */
/**
 * Mixin that hides scrollbar on scrollable elements (for example overflow lists)
 * usage:
 *  div {
 *      overflow: scroll;
 *      @include hide-scrollbar;
 *  }
 */
/**
 * Percentage function
 * Abbreviation function for using percentage without math.div
 * https://sass-lang.com/documentation/breaking-changes/slash-div
 * usage:
 * padding-left: percentage(1, 24);
 */
/**
 * Third party tools
 */
/**
 * Settings
 */
/**
 * Settings
 */
/**
 * Breakpoints
 */
/**
 * Breakpoints - map
 */
/**
 * Colors
 */
/**
 * Colors - focus accessibility
 */
/**
 * Colors - re-assigning
 */
/**
 * Colors - map
 * used for generating css variables
 */
/**
* Set useContainer to true if you are using container design, and dont need scaling for > xxl breakpoint
* @var {boolean} $useContainer - Use container
 */
/**
 * Set use-css-var to true if you want to use css var for spacing
 * @var {boolean} $use-css-var - Use css var
 */
/**
 * Set variable-prefix to change css var prefix
 * @var {string} $variable-prefix - Variable prefix
*/
/**
 * Big screen coefficient for fluid sizing, used for > xxl breakpoint
 * used for lowering sizes on big screens
 * @var {number} $big-viewport-coefficient - Big viewport coefficient
 */
/**
 * Spacing map
 */
/**
 * Transition easing map
 */
/**
 * Transitions map
 */
/**
 * Roboto
 */
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Regular.woff2?1") format("woff2"), url("../fonts/Roboto-Regular.woff?1") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Roboto";
  src: url("../fonts/Roboto-Bold.woff2?1") format("woff2"), url("../fonts/Roboto-Bold.woff?1") format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap;
}
/**
 * OT Jubilee
 */
@font-face {
  font-family: "OT Jubilee Platinum";
  src: url("../fonts/OTJubilee.woff2?1") format("woff2"), url("../fonts/OTJubilee.woff?1") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
/**
 * PPFragment
 */
@font-face {
  font-family: "PP Fragment Sans";
  src: url("../fonts/PPFragment.woff2?1") format("woff2"), url("../fonts/PPFragment.woff?1") format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
/**
 * Font variables
 */
/**
 * Font size map
 */
/**
 * Z-index map
 */
/**
 * Ratio map
 */
/**
 * Third party settings
 */
/**
 * Generics
 */
/**
 * Generics
 */
/**
 * Third party generics
 */
/**
 * b-reset.scss - modern CSS reset used by Bornfight frontend team.
 * Consists of best CSS reset practices combined into one file.
 */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 * 3. Tells the browser to account for any border and padding in the values you specify for an element's width and height
 */
html {
  line-height: 1.15; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  box-sizing: border-box; /* 3 */
  width: 100%;
}

/**
 * All elements inherit box model
 */
*,
*::before,
*::after {
  box-sizing: inherit;
}

/**
 * Reset elements in all browsers
 */
html,
body,
div,
span,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
abbr,
address,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
samp,
small,
strong,
sub,
sup,
var,
b,
i,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
figcaption,
figure,
footer,
header,
menu,
nav,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent;
}

/**
 * Set core body defaults
 * 1. sets the behavior for a scrolling box when scrolling is triggered by the navigation or CSSOM scrolling APIs.
 * 2. The browser emphasizes rendering speed over legibility and geometric precision when drawing text.
 * 3. Disables the browser's inflation algorithm on some smart phones and tablets.
 * 4. Font smoothing
 */
body {
  scroll-behavior: smooth; /* 1 */
  text-rendering: optimizeSpeed; /* 2 */
  -webkit-text-size-adjust: none; /* 3 */
  -webkit-font-smoothing: antialiased; /* 4 */
  -moz-osx-font-smoothing: grayscale; /* 4 */
  width: 100%;
}

/**
 * Remove list style from lists
 */
ul {
  list-style: none;
}

/**
 * Make media easier to work with
 */
img,
iframe,
video,
object,
embed,
picture {
  display: block;
  max-width: 100%;
  height: auto;
  width: 100%;
}

/**
 * Remove outline from tabindex -1
 */
[tabindex="-1"] {
  outline: none !important;
}

/**
 * Add the correct height in Firefox.
 */
hr {
  height: 0;
}

/**
 * Add the correct text decoration in Chrome, Edge, and Safari.
 */
abbr[title] {
  text-decoration: underline dotted;
}

/**
 * Add the correct font weight in Edge and Safari.
 */
b,
strong {
  font-weight: bold;
}

/**
 * 1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
 * 2. Correct the odd 'em' font sizing in all browsers.
 */
code,
kbd,
samp,
pre {
  font-family: SFMono-Regular, Consolas, "Liberation Mono", Menlo, monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: 1.15; /* 1 */
  margin: 0; /* 2 */
}

/**
 * Remove the inheritance of text transform in Edge and Firefox.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  text-transform: none; /* 1 */
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Add the correct vertical alignment in Chrome and Firefox.
 */
progress {
  vertical-align: baseline;
}

/**
 * Correct the cursor style of increment and decrement buttons in Safari.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to 'inherit' in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/**
 * Add the correct display in Chrome and Safari.
 */
summary {
  display: list-item;
}

/**
 * Remove all animations and transitions for people that prefer not to see them
 */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
/**
 * Browser specific form elements reset
 */
/**
 * Search input browser additions reset
 * 1. Clears the 'X' from Chrome
 * 2. Clears the 'X' from Internet Explorer
 */
input[type=search]::-webkit-search-decoration,
input[type=search]::-webkit-search-cancel-button,
input[type=search]::-webkit-search-results-button,
input[type=search]::-webkit-search-results-decoration {
  /* 1 */
  -webkit-appearance: none;
  display: none;
}

input[type=search]::-ms-clear,
input[type=search]::-ms-reveal {
  /* 2 */
  display: none;
  width: 0;
  height: 0;
}

/**
 * Remove arrows/spinners from number input
 * 1. Chrome, Safari, Edge, Opera
 * 2. Firefox
 */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  /* 1 */
  -webkit-appearance: none;
  margin: 0;
}

input[type=number] {
  /* 2 */
  -moz-appearance: textfield;
}

/**
 * Remove Safari autocomplete additions
 * 1. Contacts fill button
 * 2. Password fill button
 * 3. Number input spinner
 */
input[autocomplete=off]::-webkit-contacts-auto-fill-button,
input[autocomplete=off]::-webkit-credentials-auto-fill-button {
  /* 1, 2, 3 */
  visibility: hidden;
  display: none !important;
  pointer-events: none;
  height: 0;
  width: 0;
  margin: 0;
}

/**
 * Remove select triangle on IE
 */
select::-ms-expand {
  display: none;
}

/**
 * Remove dotted outline from range input on Firefox
 */
input[type=range]::-moz-focus-outer {
  border: 0;
}

/**
 * Elements
 */
/**
 * Elements
 */
/**
 * Generate css variables for spacing if use-css-var is true
 */
:root {
  --s-2: clamp(0.13rem, 0vw + 0.13rem, 0.13rem);
  --s-4: clamp(0.25rem, 0vw + 0.25rem, 0.25rem);
  --s-8: clamp(0.5rem, 0vw + 0.5rem, 0.5rem);
  --s-12: clamp(0.5rem, 0.42vw + 0.38rem, 0.75rem);
  --s-16: clamp(0.75rem, 0.42vw + 0.63rem, 1rem);
  --s-20: clamp(0.75rem, 0.83vw + 0.5rem, 1.25rem);
  --s-24: clamp(1rem, 0.83vw + 0.75rem, 1.5rem);
  --s-32: clamp(1.25rem, 1.25vw + 0.88rem, 2rem);
  --s-40: clamp(1.5rem, 1.67vw + 1rem, 2.5rem);
  --s-48: clamp(1.5rem, 2.5vw + 0.75rem, 3rem);
  --s-56: clamp(2rem, 2.5vw + 1.25rem, 3.5rem);
  --s-64: clamp(2.5rem, 2.5vw + 1.75rem, 4rem);
  --s-72: clamp(3rem, 2.5vw + 2.25rem, 4.5rem);
  --s-80: clamp(3.5rem, 2.5vw + 2.75rem, 5rem);
  --s-96: clamp(4rem, 3.33vw + 3rem, 6rem);
  --s-112: clamp(4.5rem, 4.17vw + 3.25rem, 7rem);
  --s-120: clamp(4.5rem, 5vw + 3rem, 7.5rem);
  --s-136: clamp(5rem, 5.83vw + 3.25rem, 8.5rem);
  --s-160: clamp(5rem, 8.33vw + 2.5rem, 10rem);
  --s-184: clamp(6rem, 9.17vw + 3.25rem, 11.5rem);
  --s-200: clamp(6rem, 10.83vw + 2.75rem, 12.5rem);
  --s-248: clamp(7rem, 14.17vw + 2.75rem, 15.5rem);
  --s-264: clamp(7.5rem, 15vw + 3rem, 16.5rem);
  --s-320: clamp(10rem, 16.67vw + 5rem, 20rem);
  --a5: clamp(3.44rem, 3.13vw + 2.5rem, 5.31rem);
  --a4: clamp(2.38rem, 2.71vw + 1.56rem, 4rem);
  --a3: clamp(1.75rem, 2.08vw + 1.13rem, 3rem);
  --a2: clamp(1.56rem, 1.67vw + 1.06rem, 2.56rem);
  --a1: clamp(1.13rem, 0.73vw + 0.91rem, 1.56rem);
  --b0: clamp(1rem, 0.21vw + 0.94rem, 1.13rem);
  --b1: clamp(0.88rem, 0.21vw + 0.81rem, 1rem);
  --b2: clamp(0.81rem, 0.21vw + 0.75rem, 0.94rem);
  --b3: clamp(0.63rem, 0.31vw + 0.53rem, 0.81rem);
  --b4: clamp(0.69rem, 0.1vw + 0.66rem, 0.75rem);
  --breakpoint-sm: 480px;
  --breakpoint-md: 800px;
  --breakpoint-lg: 1140px;
  --breakpoint-xl: 1440px;
  --breakpoint-xxl: 1920px;
  --breakpoint-xxxl: 3840px;
  --white: #ffffff;
  --black: #000000;
  --mango: #f7b334;
  --slate: #3c5163;
}

/**
 * Generate css variables for spacing in > xxl breakpoint if use-css-var is true and use-container is false
 */
:root {
  --font-primary: Roboto, sans-serif;
  --font-secondary: Roboto, sans-serif;
  --text-color: #000000;
  --bg-color: #ffffff;
  --fs-b0: 15px;
  --frame-offset: 50px;
}

html,
body {
  -webkit-font-smoothing: antialiased;
}

body {
  color: #000000;
  background-color: #ffffff;
}

a {
  color: inherit;
  text-decoration: none;
}
a:active, a:focus {
  /* 1 */
}
a:active:not(:disabled):focus-visible, a:focus:not(:disabled):focus-visible {
  outline: 0;
  box-shadow: 0 0 0 2px #ffffff, 0 0 0 4px #000000;
}
@media (min-width: 1440px) {
  a:active:not(:disabled):focus-visible, a:focus:not(:disabled):focus-visible {
    box-shadow: 0 0 0 0.1388888889vw #ffffff, 0 0 0 0.2777777778vw #000000;
  }
}

/**
 * Objects
 */
/**
 * Objects
 */
/**
 * Pages
 */
/**
 * Pages
 */
/**
 * Utilities
 */
/**
 * Utilities
 */
.u-icon {
  display: inline-block;
  width: 1em;
  height: 100%;
  stroke-width: 0;
  stroke: currentcolor;
  fill: currentcolor;
}

.u-a5 {
  font-size: var(--a5);
  font-family: "Roboto", sans-serif;
  line-height: 100%;
  letter-spacing: normal;
}

.u-a4 {
  font-size: var(--a4);
  font-family: "Roboto", sans-serif;
  line-height: 107%;
  letter-spacing: -0.02078125em;
}

.u-a3 {
  font-size: var(--a3);
  font-family: "Roboto", sans-serif;
  line-height: 116%;
  letter-spacing: -0.0208333333em;
}

.u-a2 {
  font-size: var(--a2);
  font-family: "Roboto", sans-serif;
  line-height: 112%;
  letter-spacing: -0.0195121951em;
}

.u-a1 {
  font-size: var(--a1);
  font-family: "Roboto", sans-serif;
  line-height: 130%;
  letter-spacing: normal;
}

.u-b0, body {
  font-size: var(--b0);
  font-family: "Roboto", sans-serif;
  line-height: 144%;
  letter-spacing: normal;
}

.u-b1 {
  font-size: var(--b1);
  font-family: "Roboto", sans-serif;
  line-height: 110%;
  letter-spacing: normal;
}

.u-b2 {
  font-size: var(--b2);
  font-family: "Roboto", sans-serif;
  line-height: 133%;
  letter-spacing: -0.0066666667em;
}

.u-b3 {
  font-size: var(--b3);
  font-family: "Roboto", sans-serif;
  line-height: 133%;
}

.u-font-primary {
  font-family: var(--font-primary);
  font-weight: normal;
  font-style: normal;
}

.u-font-secondary {
  font-family: var(--font-secondary);
  font-weight: normal;
  font-style: normal;
}

.u-uppercase {
  text-transform: uppercase;
}

.u-capitalize {
  text-transform: capitalize;
}

.u-text-left {
  text-align: left;
}

.u-text-center {
  text-align: center;
}

.u-text-right {
  text-align: right;
}

.u-underline {
  text-decoration: underline;
}

.u-fw-thin,
.u-fw-100 {
  font-weight: 100;
}

.u-fw-extra-light,
.u-fw-200 {
  font-weight: 200;
}

.u-fw-light,
.u-fw-300 {
  font-weight: 300;
}

.u-fw-regular,
.u-fw-normal,
.u-fw-400 {
  font-weight: 400;
}

.u-fw-medium,
.u-fw-500 {
  font-weight: 500;
}

.u-fw-semi-bold,
.u-fw-600 {
  font-weight: 600;
}

.u-fw-bold,
.u-fw-700 {
  font-weight: 700;
}

.u-fw-extra-bold,
.u-fw-800 {
  font-weight: 800;
}

.u-fw-black,
.u-fw-900 {
  font-weight: 900;
}

.u-button-reset {
  -webkit-appearance: none;
  border: 0;
  outline: 0;
  cursor: pointer;
  background-color: transparent;
  border-radius: 0;
  margin: 0;
  padding: 0;
  box-shadow: unset;
}

/**
 * Ratio
 * Create ratio-bound content blocks, to keep media (e.g. images, videos) in
 * their correct aspect ratios.
 *
 * 1. Default cropping is a 1:1 ratio (i.e. a perfect square).
 *
 * Inspo: https://github.com/inuitcss/inuitcss/blob/19d0c7e/objects/_objects.ratio.scss
 */
.u-ratio {
  position: relative;
  display: block;
  overflow: hidden;
}
.u-ratio:before {
  display: block;
  padding-bottom: 100%;
  width: 100%;
  content: "";
}

.u-ratio__inner,
.u-ratio > img,
.u-ratio > video,
.u-ratio > iframe,
.u-ratio > embed,
.u-ratio > object {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/**
 * Ratio variants.
 * Generate a series of ratio classes to be used like so:
 *
 * <div class="u-ratio  u-ratio--16:9">
 *
 */
.u-ratio--2-1:before {
  padding-bottom: 50%;
}

.u-ratio--4-3:before {
  padding-bottom: 75%;
}

.u-ratio--16-9:before {
  padding-bottom: 56.25%;
}

/**
 * Components
 */
/**
 * Components
 */
/**
 * Examples
 * Ring configurator
 */
.c-frame {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}
.c-frame__line {
  display: inline-block;
  background-color: #ffffff;
  position: absolute;
}
.c-frame__line--left {
  top: var(--frame-offset);
  bottom: var(--frame-offset);
  left: var(--frame-offset);
  width: 3px;
  transform-origin: bottom;
  transform: scaleY(0);
}
.c-frame__line--right {
  top: var(--frame-offset);
  bottom: var(--frame-offset);
  right: var(--frame-offset);
  width: 3px;
  transform-origin: bottom;
  transform: scaleY(0);
}
.c-frame__line--top-left {
  top: var(--frame-offset);
  left: var(--frame-offset);
  right: 50%;
  height: 3px;
  transform-origin: left;
  transform: scaleX(0);
}
.c-frame__line--top-right {
  top: var(--frame-offset);
  right: var(--frame-offset);
  left: 50%;
  height: 3px;
  transform-origin: right;
  transform: scaleX(0);
}
.c-frame__line--bottom {
  bottom: var(--frame-offset);
  left: var(--frame-offset);
  right: var(--frame-offset);
  height: 3px;
  transform-origin: center;
  transform: scaleX(0);
}

#c-ring-configurator {
  --text-color: #521400;
  --bg-color: #e2e2e2;
  --font-primary: PP Fragment Sans, sans-serif;
  --font-secondary: OT Jubilee Platinum, serif;
  color: var(--text-color);
  background-color: var(--bg-color);
  font-family: var(--font-primary);
  width: 100vw;
  height: 100vh;
  overflow: hidden;
  position: relative;
  z-index: 1;
}

.c-ring-configurator__actions, .c-ring-configurator__gem, .c-ring-configurator__engraving {
  opacity: 0;
}
.c-ring-configurator__engraving {
  gap: 15px;
}
.c-ring-configurator__configurator-inputs {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  align-items: flex-start;
  justify-content: flex-end;
  flex-direction: column;
  padding: 2.0833333333vw;
  opacity: 0;
  transition: 0.3s;
  pointer-events: none;
}
.c-ring-configurator__configurator-inputs.is-visible {
  opacity: 1;
}
.c-ring-configurator__configurator-inputs-inner {
  height: 7.6388888889vw;
  width: 100%;
  position: relative;
}
.c-ring-configurator__input-wrapper {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  display: flex;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
  transition: 0.25s;
}
.c-ring-configurator__input-wrapper.is-active {
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
  transition-delay: 0.2s;
}
.c-ring-configurator__input-label {
  padding-bottom: 5px;
  opacity: 0.5;
}
.c-ring-configurator__input-block {
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
  justify-content: space-between;
}
.c-ring-configurator__configurator-inputs-tabs {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
}
.c-ring-configurator__configurator-inputs-tabs li {
  margin-right: 1.3888888889vw;
}
.c-ring-configurator__configurator-inputs-tabs li:last-child {
  margin-right: 0;
}
.c-ring-configurator__configurator-inputs-tab {
  text-transform: uppercase;
  position: relative;
  opacity: 0.5;
  transition: opacity 0.25s;
  pointer-events: auto;
  padding-bottom: 5px;
}
.c-ring-configurator__configurator-inputs-tab:after {
  content: "";
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 2px;
  background-color: #dea593;
  transform: scaleX(0);
  transition: transform 0.25s;
}
@media (hover: none) {
  .c-ring-configurator__configurator-inputs-tab {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  .c-ring-configurator__configurator-inputs-tab:active {
    /* 1 */
    opacity: 1;
  }
}
@media (hover: hover), all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .c-ring-configurator__configurator-inputs-tab:hover {
    /* 2 */
    opacity: 1;
  }
}
.c-ring-configurator__configurator-inputs-tab.is-active {
  pointer-events: none;
  opacity: 1;
}
.c-ring-configurator__configurator-inputs-tab.is-active:after {
  transform: scaleX(1);
}
.c-ring-configurator__ring-material {
  display: block;
}
.c-ring-configurator__ring-material ul {
  display: flex;
  gap: 10px;
}
.c-ring-configurator__gem {
  display: block;
}
.c-ring-configurator__gem ul {
  display: flex;
  gap: 10px;
}
.c-ring-configurator__frame {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 4;
  pointer-events: none;
}
.c-ring-configurator__heading {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-end;
  z-index: 2;
  text-align: center;
  padding: 20px;
  padding-top: 8.3333333333vw;
  padding-bottom: 4.8611111111vw;
}
.c-ring-configurator__heading-title {
  font-family: var(--font-secondary);
  font-size: 10.4166666667vw;
  line-height: 1em;
  margin-bottom: 0;
}
.c-ring-configurator__heading-title > div {
  padding: 0 0.15em;
  line-height: 1em;
  height: 1.15em;
  overflow: hidden;
  display: none;
}
.c-ring-configurator__heading-title > div.is-visible {
  display: block;
}
.c-ring-configurator__heading-title > div > div {
  opacity: 0;
  visibility: hidden;
}
.c-ring-configurator__heading-subtitle {
  font-size: 15px;
  margin-bottom: 4.8611111111vw;
  opacity: 0;
  visibility: hidden;
  transform: translateY(100%);
}
.has-options-active .c-ring-configurator__heading {
  display: none;
}
.c-ring-configurator__cta {
  margin-bottom: 4.8611111111vw;
  opacity: 0;
  visibility: hidden;
  transform: translateY(100%);
}
.c-ring-configurator__button {
  border: none;
  margin: 0;
  padding: 0;
  outline: none;
  outline: 0;
  border-radius: 0;
  box-shadow: none;
  text-decoration: none;
  text-transform: none;
  text-align: center;
  overflow: hidden;
  cursor: pointer;
  vertical-align: top;
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  width: auto;
  height: auto;
  background: transparent;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  font-size: var(--fs-b0);
  padding: 10px 60px;
  background-color: transparent;
  border: 1px solid var(--text-color);
  border-radius: 100px;
  transition: all 0.2s;
}
.c-ring-configurator__button:hover, .c-ring-configurator__button:focus, .c-ring-configurator__button:active {
  outline: none;
}
@media (hover: none) {
  .c-ring-configurator__button {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  .c-ring-configurator__button:active {
    /* 1 */
    background-color: var(--bg-color);
  }
}
@media (hover: hover), all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .c-ring-configurator__button:hover {
    /* 2 */
    background-color: var(--bg-color);
  }
}
.c-ring-configurator__model-inner {
  opacity: 0;
  transform: scale(0.3) translateY(-50%);
  transition: opacity 0.25s linear, transform 1.2s cubic-bezier(0.455, 0.03, 0.515, 0.955);
  cursor: grab;
}
.c-ring-configurator__model-inner:active {
  cursor: grabbing;
}
.c-ring-configurator__model-inner.is-visible {
  opacity: 1;
}
.c-ring-configurator__model-inner.is-zoomed {
  transform: scale(1) translateY(0%);
}

.u-split-text-char {
  opacity: 0;
  visibility: hidden;
}

.c-color-option {
  border-radius: 7px;
  border: 1px solid #fff;
  background: #fff;
  transition: border-color 0.25s;
  padding: 13px 20px;
  display: flex;
  align-items: center;
  gap: 10px;
  pointer-events: auto;
  cursor: pointer;
}
.c-color-option.is-active {
  pointer-events: none;
  border-color: #a48e86;
}

.c-color {
  display: inline-block;
  width: 17px;
  height: 17px;
  border-radius: 50%;
}
.c-color--w-gold {
  background-color: #eaeaea;
}
.c-color--r-gold {
  background-color: #f5d4d4;
}
.c-color--y-gold {
  background-color: #f0daa5;
}
.c-color--w {
  background-color: #eaeaea;
}
.c-color--r {
  background-color: #ea5481;
}
.c-color--g {
  background-color: #08a36b;
}
.c-color--b {
  background-color: #0071c3;
}

.c-input,
.c-select {
  -webkit-appearance: none;
  border: 0;
  border-radius: 0;
  padding-right: 0;
  padding-left: 0;
  outline: 0;
  background: none;
  box-shadow: none;
  border-bottom: 1px solid #a48e86;
  padding-bottom: 7px;
  padding-top: 7px;
  line-height: 1.7;
}

.c-select-wrapper {
  position: relative;
}
.c-select-wrapper:after {
  position: absolute;
  content: "";
  top: 50%;
  transform: translateY(-75%) rotate(-45deg);
  right: 3px;
  width: 7px;
  height: 7px;
  border-left: 1px solid #dea593;
  border-bottom: 1px solid #dea593;
}

.c-select {
  padding-right: 30px;
}

.c-range-wrapper {
  padding: 10px;
  border-radius: 7px;
  background: rgba(255, 255, 255, 0.47);
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  gap: 5px;
}

.c-range {
  -webkit-appearance: none;
  appearance: none;
  background: transparent;
  cursor: pointer;
}
.c-range::-moz-range-track {
  background: #dea593;
  height: 8px;
  border-radius: 100px;
}
.c-range::-webkit-slider-runnable-track {
  background: #dea593;
  height: 8px;
  border-radius: 100px;
}
.c-range::-moz-range-thumb {
  -webkit-appearance: none;
  appearance: none;
  transform: translateY(-2px);
  background-color: #4b2013;
  height: 12px;
  width: 12px;
  border-radius: 50%;
}
.c-range::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  transform: translateY(-2px);
  background-color: #4b2013;
  height: 12px;
  width: 12px;
  border-radius: 50%;
}
.c-range:focus {
  outline: none;
}

.c-range-value {
  min-width: 50px;
  text-align: right;
  padding-top: 0.2em;
}

.c-ring-configurator-header {
  position: fixed;
  top: 15px;
  left: 0;
  width: 100%;
  z-index: 100;
  text-align: center;
  padding: 20px var(--frame-offset);
}
.c-ring-configurator-header__close {
  border: none;
  margin: 0;
  padding: 0;
  outline: none;
  outline: 0;
  border-radius: 0;
  box-shadow: none;
  text-decoration: none;
  text-transform: none;
  text-align: center;
  overflow: hidden;
  cursor: pointer;
  vertical-align: top;
  -webkit-appearance: none;
  -moz-appearance: none;
  box-sizing: border-box;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: inherit;
  font-family: inherit;
  font-size: inherit;
  font-style: inherit;
  font-weight: inherit;
  width: auto;
  height: auto;
  background: transparent;
  line-height: normal;
  -webkit-font-smoothing: inherit;
  -moz-osx-font-smoothing: inherit;
  font-size: var(--fs-b0);
  display: inline-flex;
  align-items: center;
  position: absolute;
  top: 50%;
  left: var(--frame-offset);
  margin-top: -0.75em;
  margin-left: -0.75em;
  transition: all 0.3s;
  padding-left: 0.5em;
  padding-right: 0.5em;
  opacity: 0;
  visibility: hidden;
}
.c-ring-configurator-header__close:hover, .c-ring-configurator-header__close:focus, .c-ring-configurator-header__close:active {
  outline: none;
}
.c-ring-configurator-header__close .u-icon {
  font-size: 0.75em;
  margin-right: 0.75em;
  transition: all 0.3s;
}
@media (hover: none) {
  .c-ring-configurator-header__close {
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  }
  .c-ring-configurator-header__close:active {
    /* 1 */
  }
  .c-ring-configurator-header__close:active .u-icon {
    transform: translateX(-50%);
  }
}
@media (hover: hover), all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .c-ring-configurator-header__close:hover {
    /* 2 */
  }
  .c-ring-configurator-header__close:hover .u-icon {
    transform: translateX(-50%);
  }
}
.has-options-active .c-ring-configurator-header__close {
  opacity: 1;
  visibility: visible;
}
.c-ring-configurator-header__title {
  display: inline-block;
  font-family: var(--font-secondary);
  font-size: 30px;
  height: 1.25em;
  overflow: hidden;
}
.c-ring-configurator-header__title > div {
  padding: 0 0.15em;
  height: 1.15em;
  line-height: 1em;
  overflow: hidden;
  display: none;
}
.c-ring-configurator-header__title > div.is-visible {
  display: block;
}
.c-ring-configurator-header__title > div > div {
  opacity: 0;
  visibility: hidden;
}

/**
 * Vendors
 */
/**
 * Third party vendors
 */
/**
 * Vendors
 */

/*# sourceMappingURL=style.css.map*/